env:
    global:
        - PROJECT_SPEC="pyshtools"
        - PLAT=x86_64
        - NP_BUILD_DEP="numpy"
        - CYTHON_BUILD_DEP="Cython"
        - NP_TEST_DEP="numpy"
        - UNICODE_WIDTH=32
        - MB_ML_VER=2014

branches:
  only:
  - master

language: c
dist: trusty
services: docker

matrix:
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.9
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.8
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.9

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew uninstall --ignore-dependencies gcc;
        brew install gcc;
      fi
    - BUILD_DEPENDS="$NP_BUILD_DEP $CYTHON_BUILD_DEP versioneer"
    - TEST_DEPENDS="$NP_TEST_DEP pytest pytest-xdist pytest-faulthandler pytest-env versioneer"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_index_wheel $PROJECT_SPEC

script:
    - install_run $PLAT

after_success:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        pip install --upgrade pyOpenSSL;
      fi
    - pip install twine
    # Upload wheels to PYPI
    - twine upload --skip-existing --username $PYPI_USERNAME --password $PYPI_PASSWORD ${TRAVIS_BUILD_DIR}/wheelhouse/*
    # Upload wheels to PYPITEST
    #- twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing --username $PYPITEST_USERNAME --password $PYPITEST_PASSWORD ${TRAVIS_BUILD_DIR}/wheelhouse/*
